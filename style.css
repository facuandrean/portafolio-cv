/* Arquitectura Minimalista, ordenada alfabéticamente, donde usamos el concepto de DRY con las 4 primeras secciones, ya la quinta depende del proyecto */

/* *************************************** Custom properties *************************************** */
:root {
    --first-color: #D90062;
    --first-alpha-color: rgba(217, 0, 98, 0.75);
    --second-color: #14192D;
    --second-alpha-color: rgba(20, 25, 45, 0.75);
    --third-color: #501464;
    --third-alplha-color: rgba(80, 20, 100, 0.75);
    --white-color: #FFFFFF;
    --gray-light-color: #F3F3F3;
    --gray-color: #CCCCCC;
    --gray-dark-color: #666666;
    --black-color: #000000;
    --link-color: #509EE3;
    --title-color: #333333;
    --text-color: #222222;
    --white-alpha-color: rgba(255, 255, 255, 0.5);
    --black-alpha-color: rgba(0, 0, 0, 0.5);
    --font: "Raleway", sans-serif;
    --max-width: 1200px;
    --header-height: 4rem;
}

/* *************************************** Reset *************************************** */
html {
    box-sizing: border-box;
    font-family: var(--font);
    font-size: 16px;
    scroll-behavior: smooth;
}

*, 
*::after, 
*::before {
    box-sizing: inherit;
}

body {
    margin: 0px;
    overflow-x: hidden;
    color: var(--text-color);
}

a {
    color: var(--link-color);
    transition: all .5s ease-out; /* Es para hacerle una transicion de opacidad cuando pongamos por encima el cursor */
}

a:hover {
    opacity: 0.75;
}

h1 {
    margin: 0px;
    font-size: 2rem;
}

h2 {
    margin: 0px;
    font-size: 1.5rem;
}

h3 {
    margin: 0px;
    font-size: 1.25rem;
}

h4 {
    margin: 0px;
    font-size: 1rem;
}

h5 {
    margin: 0px;
    font-size: 0.85rem;
}

h6 {
    margin: 0px;
    font-size: 0.7rem;
}

img {
    /* Imágenes responsivas */
    max-width: 100%;
    height: auto;
}

p {
    line-height: 1.6; /* Interlineado */
}

/* *************************************** Components *************************************** */

    /* Carousel */

/* @keyframes carousel-slide {
    0% {
        transform: translateX(0%);
    }

    25% {
        transform: translateX(-25%);
    }

    50% {
        transform: translateX(-50%);
    }

    75% {
        transform: translateX(-75%);
    }
} */

.carousel {
    margin: 2rem auto;
    padding: 2rem 0;
    max-width: 90vw;
    text-align: center;
    background-color: var(--carousel-bg-color);
    overflow-x: hidden;
}

.carousel .slides {
    /* Por cada slide que tenga el carousel, tienes que sumarle un 100% al ancho */
    width: 400%;
    display: flex;
    list-style: none;
    padding-left: 0px;
    transition: transform .5s ease-in-out;

    /* animation: carousel-slide 12s ease-in-out 3s; */
}

.carousel input {
    display: none;
}

.carousel label {
    display: inline-block;
    width: .75rem;
    height: .75rem;
    border: medium solid var(--gray-light-color);
    border-radius: 50%;
    cursor: pointer;
    margin: 0 .25rem;
}

#slide-1:checked ~ .slides {
    /* Cada porcentaje se debe dividir entre la cantidad de slides que haya (100 / cant_de_slides), pero la primera empieza en 0, siempre, luego a las otras, se le aplica matemáticamente.*/
    transform: translateX(0%)
}

#slide-2:checked ~ .slides {
    /* Cada porcentaje se debe dividir entre la cantidad de slides que haya (100 / cant_de_slides) */
    transform: translateX(-25%)
}

#slide-3:checked ~ .slides {
    /* Cada porcentaje se debe dividir entre la cantidad de slides que haya (100 / cant_de_slides) */
    transform: translateX(-50%)
}

#slide-4:checked ~ .slides {
    /* Cada porcentaje se debe dividir entre la cantidad de slides que haya (100 / cant_de_slides) */
    transform: translateX(-75%)
}

#slide-1:checked ~ .slides-nav label#dot-1,
#slide-2:checked ~ .slides-nav label#dot-2,
#slide-3:checked ~ .slides-nav label#dot-3,
#slide-4:checked ~ .slides-nav label#dot-4 {
    background-color: var(--first-color);
}

    /* Contact Form */

.contact-form {
    margin: 2rem auto;
    padding: 1rem;
    max-width: 800px;
}

.contact-form > * {
    padding: .5rem;
    margin: 1rem auto;
    display: block;
    width: 100%;
}

.contact-form input,
.contact-form textarea {
    font-size: .85rem;
    font-family: var(--font);
}

.contact-form input {
    border: 0;
    padding-left: 0px;
    border-bottom: thin solid var(--gray-dark-color);
}

.contact-form textarea {
    border: thin solid var(--gray-dark-color);
    resize: none;
}

.contact-form input[type="submit"] {
    margin-top: 0;
    cursor: pointer;
    font-size: .85rem;
    transition: all .5s ease-in-out;
}

.contact-form input[type="submit"]:hover {
    opacity: .75;
}

.contact-form *::placeholder {
    color: var(--gray-dark-color)
}


.contact-form-response {
    padding: 1rem;
    width: 400px;
    text-align: center;
    background-color: var(--white-color);
}

.contact-form-response svg {
    margin-top: 2rem;
    width: 4rem;
    height: 4rem;
    fill: var(--first-color)
}

.modal#gracias:target {
    opacity: 1;
    pointer-events: auto;
}

@media screen and (min-width: 1024px) {
    .contact-form {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 1rem;
    }

    .contact-form input,
    .contact-form textarea {
        font-size: 1rem;
    }

    .contact-form textarea,
    .contact-form-loader {
        grid-column: span 2;
    }

    .contact-form input[type="submit"] {
        margin-left: 0;
    }
}

    /* HeroImage */

.hero-image {
    background-image: var(--hero-image);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    background-attachment: var(--hero-attachment); /* Para que se quede fija cuando scrollee */
}

.hero-image-opacity {
    width: 100%;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--hero-opacity-color);
    text-align: center;
}

.hero-image-title {
    color: var(--hero-text-color);
    font-size: 7.5vw;
}

    /* Menú de hamburguesa */

.menu-btn {
    background-color: var(--second-color);
    outline: thin solid var(--first-color);
    border: 0px;
    cursor: pointer;
}

.menu-btn svg {
    fill: var(--first-color); /* Para poner las barras del menu de hamburguesa de otro color */
}

.menu {
    position: fixed;
    left: 0;
    bottom: var(--header-height);
    width: 100%;
    background-color: var(--second-color);
    display: flex;
    flex-direction: column;

    /* para que aparezca o desaparezca el menu de hamburguesa */
    opacity: 0;
    transition: opacity .5s ease;
    pointer-events: none; /* le dice al navegador que cuando pongamos el raton encima de algo, no haya interactividad */
}

.menu.is-active {
    /* esta clase es la que me permite aparecer el menu de hamburguesa */
    /* no entiendo el porque tiene que ser ".menu.is-active" todo junto, ya que si lo separo no funciona */
    opacity: 1;
    pointer-events: auto;

    /* quedaría hacer algo con js para poder hacer que esto desaparezca y aparezca, pero en css estaría todo hecho */
}

.menu a {
    padding: 1rem;
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--first-color);
}

.menu a:hover {
    color: var(--white-color);
    background-color: var(--first-color);
}

    /* Ventana Modal */

.modal {
    position: fixed;
    z-index: 999;
    top: 0; 
    right: 0;
    bottom: 0;
    left: 0;
    /* con esto, estiramos esa ventana y lo obligamos a que ocupe toda la pantalla */
    background-color: var(--black-alpha-color);
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    pointer-events: none;
    transition: all 1s;
}

.modal-content {
    position: relative;
}

.modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
}

.modal-close svg {
    width: 3rem;
    height: 3rem;
    fill: var(--first-color);
}

.modal[id|="trabajo"]:target {
    /* yo se que el elemento que tiene la clase modal, tiene un id llamado trabajo-1, recordar que trabajo-1 es un id que lo va a activar el enlace que apunta a ese id, entonces en css hay una pseudoclase llamada :target que lo que hace es controlar cuándo un elemento está activado. Si nos fijamos en la url, aparecen y desaparecen ids, cuando aparecen, target significa que está activado para ese elemento, entonces se van a aplicar las siguientes propiedades */
    opacity: 1;
    pointer-events: auto;

    /* Ahora lo que tendríamos que hacer es darle estas dos propiedades a cada ventana modal, y lo mas razonable sería poner comas en el selector y poner lo siguiente:
    .modal#trabajo-1:target,
    .modal#trabajo-2:target,
    .modal#trabajo-3:target,
     y así sucesivamente dependiendo de cuantas ventanas modales tengamos.

    Pero hay una mejor forma y es a través del selector atributo, entonces tendríamos que poner lo siguiente:

    .modal[id|="trabajo"]

    el | (vip se llama creo) significa que lo que va a validar el selector css es que cualquier ventana modal que en su atributo id empiece con la palabra trabajo, se va a activar. */
}

@media screen and (min-width: 1024px) {
    /* media queries para desktop */
    /* para quitar el menu de hamburguesa */

    .menu-btn {
        display: none;
    }

    .menu {
        position: static;
        opacity: 1;
        pointer-events: auto;
        width: auto;
        flex-direction: row;
    }

    .menu a {
        padding: 0 1rem;
    }

    .menu a:last-child {
        padding-right: 0;
    }

    .menu a:hover {
        background-color: transparent;
    }
}

    /* progress bar */

progress {
    width: 100%;
    height: 1rem;
    background-color: var(--gray-color);
}

/* chrome necesita de los prefijos */

progress::-webkit-progress-bar {
    /* para darle el fondo gris */
    background-color: var(--gray-color);
}

progress::-webkit-progress-value {
    /* para darle el color al porcentaje, osea al relleno */
    background-color: var(--first-color);
}

/* mozilla necesita de los prefijos */

progress::-moz-progress-bar {
    background-color: var(--gray-color);
}

progress::-moz-progress-value {
    /* para darle el color al porcentaje, osea al relleno */
    background-color: var(--first-color);
}

.progress {
    margin: 1rem auto;
}

.progress > p {
    margin: 0;
    display: flex;
    justify-content: space-between;
    font-size: .85rem;
}

/* *************************************** Utilities *************************************** */

.avatar {
    border-radius: 50%;
    width: 150px;
    height: 150px;
}

.bg-gray-light {
    background-color: var(--gray-light-color);
}

.box-shadow-1 {
    box-shadow: .25rem .25rem 1rem rgba(0, 0, 0, 0.25);
}

.btn {
    border-radius: .5rem;
    padding: 1rem;
    display: inline-block;
    width: 200px;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--white-color);
    background-color: var(--first-color);
}

.container {
    margin-left: auto;
    margin-right: auto;
    max-width: var(--max-width);
}

.gray-scale {
    filter: grayscale(1);
}

.none {
    display: none;
}

.section {
    padding: 2rem 1rem;
}

.section-altura-modal {
    padding: 5rem 1rem;
}

.section-contacto {
    margin: 1rem 1rem;
}

.section-title {
    border-top: thin solid var(--first-color);
    border-bottom: thin solid var(--first-color);
    width: 250px;
    margin: 2rem auto;
    padding: .5rem 1rem;
    text-align: center;
    color: var(--title-color);
}

.text-first-color {
    color: var(--first-color);
}

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

@media screen and (min-width: 1024px) {
    .full-lg-screen {
        /* para que cuando apretemos alguna sección, solo se muestre esa sección, y no las demás */
        width: 100%;
        min-height: 100vh;
    }

    .text-lg-center {
        text-align: center;
    }
    
    .text-lg-left {
        text-align: left;
    }
    
    .text-lg-right {
        text-align: right;
    }
}

/* *************************************** Site styles *************************************** */

.about > article {
    margin-bottom: 2rem;
}

.contact-card {
    margin: 1rem auto;
    padding: 1rem;
    width: 100%;
    height: 144px;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
}

.contact-card > svg {
    width: 2rem;
    height: 2rem;
    fill: var(--first-color)
}

.contact-card > small {
    margin-top: -1rem;
}

.footer {
    margin-bottom: var(--header-height);
    background-color: var(--third-color);
    color: var(--white-color);
    text-align: center;
    padding: .5rem;
}

.header {
    position: fixed;
    left: 0;
    bottom: 0;
    z-index: 999;
    width: 100%;
    height: var(--header-height);
    background-color: var(--second-color);
    padding: 1rem;
}

.header > .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logo a {
    color: var(--first-color);
    font-weight: bold;
    font-size: 1.5rem;
    text-decoration: none;
}

.portfolio-card {
    position: relative;
    width: 100%;
    margin: 0px auto;
    display: block;
}

.portfolio-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.portfolio-card-info {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    background-color: var(--first-alpha-color);
    color: var(--white-color);
    padding: 1rem;
    opacity: 0;
    pointer-events: none;
    transition: all 0.5s ease-in-out;
}

.portfolio-card:hover .portfolio-card-info {
    opacity: 1;
    pointer-events: auto;
}

.portfolio-card-info > div {
    padding: 1rem;
    border: thin solid var(--white-color);
    width: 100%;
    height: 100%;
}

.portfolio-modal {
    padding: 1rem;
    max-width: 350px;
    display: flex;
    flex-direction: column;
    background-color: var(--white-color);

    max-width: 95vw;
    max-height: 95vh;
    overflow-y: auto;
}

.portfolio-modal h3 {
    border-bottom: medium solid var(--first-color);
    margin: 1rem auto;
    padding: .5rem 0;
    color: var(--title-color);
}

.portfolio-details {
    display: grid;
    grid-template-columns: 40% 60%;
    grid-auto-rows: 2rem; /* Como no definimos el número de filas, no podríamos darle altura y estaría todo pegado, en cambio con esta propiedad, las filas que se generen implicitamente, van a tener 2rem de altura. */
}

.portfolio-details b {
    color: var(--first-color);
}

.service-card {
    margin: 1rem auto;
    padding: 1rem;
    text-align: center;
}

.service-card h3 {
    color: var(--title-color);
}

.service-card svg {
    fill: var(--first-color);
    margin-bottom: 1.25rem;
}

.social-media a {
    padding: 0px .4rem;
    text-decoration: none;
}

.social-media svg {
    width: 1.5rem;
    height: 1.5rem;
}

@media screen and (min-width:768px) {
    /* media querie para versión tablet */
    .contact-cards {
        display: grid;
        grid-template-columns: repeat(2, 48%);
        justify-content: space-between;
    }

    .portfolio > .container {
        display: grid;
        grid-template-columns: repeat(2, 50%);
    }

    .portfolio .section-title {
        grid-column: span 2;
    }

    .portfolio-modal {
        max-width: 800px;
        flex-direction: row;
    }

    .portfolio-info {
        margin-left: 1rem;
        align-self: center;
    }

    .services > .container {
        display: grid;
        grid-template-columns: repeat(2, 45%);
        justify-content: space-between;
        align-items: center;
    }

    .services .section-title {
        grid-column: span 2;
    }
}

@media screen and (min-width:1024px) {
    /* media querie para versión desktop */
    
    .about {
        display: grid;
        grid-template-columns: repeat(3, 30%);
        justify-content: space-between;
        align-content: center;
    }

    .contact-cards {
        grid-template-columns: repeat(4, 24%);
    }

    .footer {
        margin-bottom: 0px;
    }

    .header {
        position: sticky;
        top: 0;
        padding: .5rem;
        height: calc(var(--header-height) - 1rem);
    }

    .portfolio > .container {
        grid-template-columns: repeat(3, 1fr);
    }

    .portfolio .section-title {
        grid-column: span 3;
    }

    .services > .container {
        grid-template-columns: repeat(3, 30%);
    }

    .services .section-title {
        grid-column: span 3;
    }
}
